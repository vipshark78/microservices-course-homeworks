syntax = "proto3";

// Пакет Inventory содержит InventoryService API
package inventory.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option go_package = "github.com/vipshark78/microservices-course-homeworks/shared/pkg/proto/inventory/v1;inventory_v1";

// InventoryService содержит API для работы с деталями космических кораблей
service InventoryService {

  //Возвращает информацию о детали по её UUID
  rpc GetPart(GetPartRequest) returns (GetPartResponse){
    option (google.api.http) = {
      get: "/api/v1/inventory/{uuid}"
    };
  }

  //Возвращает список деталей с возможностью фильтрации
  rpc ListParts(ListPartsRequest) returns (ListPartsResponse){
    option (google.api.http) = {
      post: "/api/v1/inventory/list"
      body: "*"
    };
  }
}

// GetPartRequest запрос на получение информации о детали
message GetPartRequest {
  // UUID идентификатор детали
  string uuid = 1;
}

// GetPartResponse ответ на запрос информации о детали
message GetPartResponse {
  // Информация о детали
  Part part = 1;
}

// ListPartsRequest запрос на получение списка деталей c возможностью фильтрации
message ListPartsRequest {
  // Фильтр по названию детали
  PartsFilter filter = 1;
}

// ListPartsResponse ответ на запрос списка деталей
message ListPartsResponse {
  // Список деталей
  repeated Part parts = 1;
}

//Part информация о детали
message Part {
  // Уникальный идентификатор детали
  string uuid = 1;
  // Название детали
  string name = 2;
  //Описание детали
  string description = 3;
  //Цена за единицу
  double price = 4;
  //Количество на складе
  int64 stock_quantity = 5;
  //Категория
  Category category = 6;
  //Размеры детали
  Dimensions dimensions = 7;
  //Информация о производителе
  Manufacturer manufacturer = 8;
  //Теги для быстрого поиска
  repeated string tags = 9;
  //Гибкие метаданные
  map<string, Value> metadata = 10;
  //Дата создания
  google.protobuf.Timestamp created_at = 11;
  //Дата обновления
  google.protobuf.Timestamp updated_at = 12;
}

//Category перечисление категорий детали
enum Category{
  //Неизвестная категория
  UNKNOWN_UNSPECIFIED = 0;
  //Двигатель
  ENGINE = 1;
  //Топливо
  FUEL = 2;
  //Иллюминатор
  PORTHOLE = 3;
  //Крыло
  WING = 4;
}

//Dimensions Размеры детали
message Dimensions {
  //Длина в см
  double length = 1;
  //Ширина в см
  double width = 2;
  //Высота в см
  double height= 3;
  //Вес в кг
  double weight= 4;
}

//Manufacturer информация о производителе
message Manufacturer {
  //Название
  string name = 1;
  //Страна производства
  string country = 2;
  //Сайт производителя
  string website = 3;
}

//Value значение metadata
message Value {
  oneof value_type {
    //Строковое значение
    string string_value = 1;
    //Целое значение
    int64 int64_value = 2;
    //Дробное значение
    double double_value = 3;
    //Логическое значение
    bool boolean_value = 4;
  }
}

//PartsFilter Фильтр по деталям
message PartsFilter {
  //Список UUID'ов. Пусто — не фильтруем по UUID
  repeated string uuids = 1;
  //Список имён. Пусто — не фильтруем по имени
  repeated string names = 2;
  //Список категорий. Пусто — не фильтруем по категории
  repeated Category categories = 3;
  //Список стран производителей. Пусто — не фильтруем по стране
  repeated string manufacturer_countries = 4;
  //Список тегов. Пусто — не фильтруем по тегам
  repeated string tags = 5;
}

