name: Test Coverage Reusable

on:
  workflow_call:
    inputs:
      modules:
        required: true
        type: string
      go-version:
        required: true
        type: string
      gist-id:
        required: true
        type: string
    secrets:
      GIST_SECRET:
        required: true

jobs:
  coverage:
    name: Run tests and update badge
    runs-on: ubuntu-latest

    env:
      COVERAGE_DIR: coverage
      COVERAGE_FILE: total.out

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4.2.2

      - name: üß∞ Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: üìå Install Task
        uses: arduino/setup-task@v2.0.0

      - name: üß™ Run tests with coverage
        env:
          MODULES: ${{ inputs.modules }}
        run: task test-coverage

      - name: üìä Extract coverage percent
        run: |
          # –í—ã–≤–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å total –∏ –∑–∞–º–µ–Ω—è–µ–º —Ç–∞–±—ã –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
          COVERAGE_OUTPUT=$(go tool cover -func=${COVERAGE_DIR}/${COVERAGE_FILE} | tail -1)
          echo "Raw coverage output: $COVERAGE_OUTPUT"

          # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—ã–≤–æ–¥, –∑–∞–º–µ–Ω—è–µ–º —Ç–∞–±—ã –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã —Å—Ö–ª–æ–ø—ã–≤–∞–µ–º
          CLEAN_OUTPUT=$(echo "$COVERAGE_OUTPUT" | tr -s '\t ' ' ')
          echo "Cleaned output: $CLEAN_OUTPUT"

          # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–æ–∫–∏ - —ç—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç
          TOTAL=$(echo "$CLEAN_OUTPUT" | awk '{print $NF}')
          echo "üíØ Total coverage: $TOTAL"

          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          echo "TOTAL_COVERAGE=$TOTAL" >> $GITHUB_ENV
          echo "GIST_ID=${{ inputs.gist-id }}" >> $GITHUB_ENV

      - name: üè∑Ô∏è Update Gist Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ env.GIST_ID }}
          filename: coverage.json
          label: Coverage
          message: ${{ env.TOTAL_COVERAGE }}
          color: green
